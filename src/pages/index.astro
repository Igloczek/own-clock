---
import Layout from "@/layout/Layout.astro"
---

<style>
  * {
    box-sizing: border-box;
  }

  html {
    height: 100%;
    min-width: 320px;
  }

  [x-cloak] {
    display: none;
  }
</style>

<script>
  import Alpine from "alpinejs"

  import spacetime from "spacetime"
  import SunCalc from "suncalc"
  import tzlookup from "tz-lookup"

  document.addEventListener("alpine:init", () => {
    Alpine.data("app", () => ({
      loading: false,
      error: null,
      coords: {
        lat: 0,
        lon: 0,
      },
      past: 0,
      left: 0,
      init() {
        if (window.localStorage.getItem("position")) {
          const position = JSON.parse(window.localStorage.getItem("position"))
          this.coords.lat = position.latitude
          this.coords.lon = position.longitude

          this.update()
        }

        setInterval(() => {
          if (!this.isConfigured) {
            return
          }

          this.update()
        }, 1000)
      },

      get isConfigured() {
        return this.coords.lat && this.coords.lon
      },

      get isAsleep() {
        return this.left < 0 || this.past < 0
      },

      setLocation() {
        this.loading = true

        window.navigator.geolocation.getCurrentPosition(
          (position) => {
            const { latitude, longitude } = position.coords

            this.coords.lat = latitude
            this.coords.lon = longitude

            this.update()

            window.localStorage.setItem(
              "position",
              JSON.stringify({ latitude, longitude }),
            )

            this.loading = false
          },
          (error) => {
            console.error({ error })
          },
          {
            enableHighAccuracy: true,
            timeout: 5000,
          },
        )

        setTimeout(() => {
          this.loading = false
          if (this.coords.lat === 0 && this.coords.lon === 0) {
            this.error =
              "Your browser doesn't support geolocation or you didn't allow it."
          }
        }, 5000)
      },

      resetLocation() {
        this.coords.lat = 0
        this.coords.lon = 0

        window.localStorage.removeItem("position")
      },

      getSunriseTime(date) {
        const timezone = tzlookup(this.coords.lat, this.coords.lon)
        const offset = spacetime(date, timezone).timezone().current.offset

        date = spacetime(date)

        if (offset > 0) {
          date = date.add(offset, "hour")
        }

        if (offset < 0) {
          date = date.subtract(offset, "hour")
        }

        const times = SunCalc.getTimes(
          date.toNativeDate(),
          this.coords.lat,
          this.coords.lon,
        )

        return times.sunrise
      },

      update() {
        const timezone = tzlookup(this.coords.lat, this.coords.lon)
        const now = spacetime.now(timezone)

        const today = now.startOf("day").toNativeDate()
        const tomorrow = now.add(1, "day").startOf("day").toNativeDate()

        const wakeUpTime = spacetime(this.getSunriseTime(today))
        const nextSunrise = spacetime(this.getSunriseTime(tomorrow))

        const sleepTime = nextSunrise.subtract(8, "hours")

        this.past = wakeUpTime.diff(now, "milliseconds")
        this.left = now.diff(sleepTime, "milliseconds")
      },
      getTime(number, type) {
        if (type === "hours") {
          return this.formatNumber(Math.floor(number / (1000 * 60 * 60)))
        }

        if (type === "minutes") {
          return this.formatNumber(Math.floor((number / (1000 * 60)) % 60))
        }

        if (type === "seconds") {
          return this.formatNumber(Math.floor((number / 1000) % 60))
        }
      },
      formatNumber(number) {
        return number.toString().padStart(2, "0")
      },
    }))
  })

  window.onload = () => {
    Alpine.start()

    // needed for Alpine devtools
    window.Alpine = Alpine
  }
</script>

<Layout>
  <main class="flex h-full items-center">
    <div
      class="flex h-full w-full flex-col items-center justify-center px-4 py-8 text-center"
      x-data="app"
    >
      <div
        class="flex flex-col items-center justify-center"
        x-show="!isConfigured"
        x-cloak
      >
        <h1 class="text-5xl font-bold leading-tight min-[340px]:text-6xl">
          Own <span class="text-purple-500">clock</span>
        </h1>

        <p class="mt-4 max-w-prose leading-6">
          Break free from the constraints of standard time and embrace the sun's
          natural rhythm for a healthier sleep cycle and a more balanced day.
        </p>

        <p class="mt-4 max-w-prose text-sm leading-6">
          How? Each day, the app will tell you when to go to bed, ensuring you
          wake up at sunrise, after 8 hours of sleep. By using only relative
          time, it helps you break habits tied to the conventional clock.
        </p>

        <button
          class="mt-8 rounded bg-purple-500 px-16 py-2 text-sm text-white hover:bg-purple-600"
          :class="loading ? 'opacity-50 cursor-not-allowed' : ''"
          @click="setLocation"
          x-text="loading ? 'Checking location...' : 'Setup own clock'"
          :disabled="loading"
        >
          Setup own clock
        </button>

        <p
          class="p-1 text-center text-xs"
          x-show="!error"
        >
          App need location to calculate your local sunrise and sunset times,
          it's one-time action.
        </p>

        <p
          class="p-1 text-center text-xs text-red-500"
          x-show="error"
          x-text="error"
        >
        </p>
      </div>

      <div
        x-show="isConfigured"
        class="fixed bottom-2 left-0 right-0 z-10 text-xs text-gray-300"
      >
        <div
          class="flex flex-col items-center justify-center gap-4 sm:flex-row"
        >
          <a
            class="underline"
            :href="`https://www.google.com/maps/place/${coords.lat},${coords.lon}`"
            x-text="`${coords.lat}, ${coords.lon}`"
            title="Open in Google Maps"
            target="_blank"
          >
          </a>
          <button
            type="button"
            class="rounded border border-gray-300 px-2 py-1 transition hover:border-purple-300 hover:text-purple-300"
            @click="resetLocation"
          >
            Reset location
          </button>
        </div>
      </div>

      <div
        x-show="isConfigured && isAsleep"
        x-cloak
      >
        <div class="p-1 font-bold leading-tight">
          You should be asleep, go to bed, now.
        </div>
      </div>

      <div
        x-show="isConfigured && !isAsleep"
        x-cloak
      >
        <div>
          <div class="pb-2 text-xs">Since wake up</div>
          <div
            class="flex flex-row items-center justify-center gap-2 text-4xl font-bold"
          >
            <div
              class="w-20 rounded border p-2 font-mono"
              x-text="getTime(past, 'hours')"
            >
              00
            </div>
            <div
              class="w-20 rounded border p-2 font-mono"
              x-text="getTime(past, 'minutes')"
            >
              00
            </div>
            <div
              class="w-20 rounded border p-2 font-mono"
              x-text="getTime(past, 'seconds')"
            >
              00
            </div>
          </div>
        </div>

        <div class="mt-8">
          <div class="pb-2 text-xs">Till bedtime</div>

          <div
            class="flex flex-row items-center justify-center gap-2 text-4xl font-bold"
          >
            <div
              class="w-20 rounded border p-2 font-mono"
              x-text="getTime(left, 'hours')"
            >
              00
            </div>
            <div
              class="w-20 rounded border p-2 font-mono"
              x-text="getTime(left, 'minutes')"
            >
              00
            </div>
            <div
              class="w-20 rounded border p-2 font-mono"
              x-text="getTime(left, 'seconds')"
            >
              00
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>
